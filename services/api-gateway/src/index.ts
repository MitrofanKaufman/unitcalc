// \server\src\index.ts
// ะะปะฐะฒะฝัะน ัะฐะนะป ัะตัะฒะตัะฝะพะน ัะฐััะธ - ะธะฝะธัะธะฐะปะธะทะฐัะธั Express ะฟัะธะปะพะถะตะฝะธั ะธ ะฟะพะดะบะปััะตะฝะธะต ะฒัะตั ะบะพะผะฟะพะฝะตะฝัะพะฒ

import express from 'express'
import cors from 'cors'
import helmet from 'helmet'
import morgan from 'morgan'
import dotenv from 'dotenv'
import { errorHandler } from './middleware/errorHandler'
import { notFoundHandler } from './middleware/notFoundHandler'
import { createProductRoutes } from './routes/productRoutes'

// ะะฐะณััะทะบะฐ ะฟะตัะตะผะตะฝะฝัั ะพะบััะถะตะฝะธั
dotenv.config()

// ะกะพะทะดะฐะฝะธะต Express ะฟัะธะปะพะถะตะฝะธั
const app = express()
const PORT = process.env.SERVER_PORT || 3001

// Middleware ะดะปั ะฑะตะทะพะฟะฐัะฝะพััะธ
app.use(helmet())

// Middleware ะดะปั CORS
app.use(cors({
  origin: process.env.CLIENT_URL || 'http://localhost:3000',
  credentials: true
}))

// Middleware ะดะปั ะปะพะณะธัะพะฒะฐะฝะธั
app.use(morgan('combined'))

// Middleware ะดะปั ะฟะฐััะธะฝะณะฐ JSON
app.use(express.json({ limit: '10mb' }))
app.use(express.urlencoded({ extended: true }))

// Health check endpoint
app.get('/health', (req, res) => {
  res.json({
    status: 'OK',
    timestamp: new Date().toISOString(),
    version: process.env.npm_package_version || '1.0.0',
    service: 'Marketplace Calculator API'
  })
})

// API ะผะฐัััััั
app.use('/api/products', createProductRoutes())

// Middleware ะดะปั ััะฐัะธัะตัะบะธั ัะฐะนะปะพะฒ (ัะพะปัะบะพ ะดะปั favicon.ico)
app.get('/favicon.ico', (req, res) => {
  res.status(204).end()
})

// Middleware ะดะปั ะพะฑัะฐะฑะพัะบะธ ะพัะธะฑะพะบ (ะดะพะปะถะตะฝ ะฑััั ะฟะพัะปะตะดะฝะธะผ)
app.use(notFoundHandler)
app.use(errorHandler)

// ะะฐะฟััะบ ัะตัะฒะตัะฐ
app.listen(PORT, () => {
  console.log(`๐ ะกะตัะฒะตั ะทะฐะฟััะตะฝ ะฝะฐ ะฟะพััั ${PORT}`)
  console.log(`๐ Health check: http://localhost:${PORT}/health`)
  console.log(`๐ API ะดะพะบัะผะตะฝัะฐัะธั: http://localhost:${PORT}/api-docs`)
})

export default app
