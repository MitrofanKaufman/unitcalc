import React from 'react';
import { Product } from '../hooks/useWildberriesSearch';

/**
 * –ü—Ä–æ–ø–µ—Ä—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞
 */
export interface ProductCardProps {
  /** –û–±—ä–µ–∫—Ç —Ç–æ–≤–∞—Ä–∞ —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π */
  product: Product;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø–æ–∏—Å–∫–∞
 *
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ –≤–∫–ª—é—á–∞—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –Ω–∞–∑–≤–∞–Ω–∏–µ, –±—Ä–µ–Ω–¥,
 * —Ü–µ–Ω—É, —Ä–µ–π—Ç–∏–Ω–≥ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞
 * –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ.
 *
 * @param props - –ø—Ä–æ–ø–µ—Ä—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞
 * @param props.product - –æ–±—ä–µ–∫—Ç —Ç–æ–≤–∞—Ä–∞ —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
 * @returns JSX —ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞
 *
 * @example
 * ```tsx
 * const product = {
 *   id: 123,
 *   name: '–°–º–∞—Ä—Ç—Ñ–æ–Ω Samsung Galaxy',
 *   price: 25000,
 *   rating: 4.5,
 *   image: 'https://example.com/image.jpg',
 *   images: ['https://example.com/image1.jpg'],
 *   brand: 'Samsung',
 *   seller: { id: 1, name: '–ú–∞–≥–∞–∑–∏–Ω', rating: 4.8 },
 *   feedbacks: 150,
 *   inStock: true
 * };
 *
 * <ProductCard product={product} />
 * ```
 */
export const ProductCard: React.FC<ProductCardProps> = ({ product }) => {
  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ü–µ–Ω—É –≤ —Ä—É–±–ª—è—Ö —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
   * @param price - —Ü–µ–Ω–∞ –≤ –∫–æ–ø–µ–π–∫–∞—Ö
   * @returns –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Ü–µ–Ω—ã –≤ —Ä—É–±–ª—è—Ö
   * @example
   * ```tsx
   * formatPrice(25000) // "25 000 ‚ÇΩ"
   * ```
   */
  const formatPrice = (price: number) => {
    return new Intl.NumberFormat('ru-RU', {
      style: 'currency',
      currency: 'RUB',
      minimumFractionDigits: 0,
    }).format(price);
  };

  /**
   * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∑–≤–µ–∑–¥–æ—á–∫–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞ —Ç–æ–≤–∞—Ä–∞
   * @param rating - —Ä–µ–π—Ç–∏–Ω–≥ —Ç–æ–≤–∞—Ä–∞ (0-5)
   * @returns JSX —ç–ª–µ–º–µ–Ω—Ç —Å –∑–≤–µ–∑–¥–æ—á–∫–∞–º–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞ –∏–ª–∏ null –µ—Å–ª–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞ –Ω–µ—Ç
   */
  const renderStars = (rating: number | null) => {
    if (!rating) return null;

    return (
      <div className="product-rating">
        <span className="rating-text">{rating.toFixed(1)}</span>
      </div>
    );
  };

  return (
    <div className="product-card">
      <div className="product-image">
        <img src={product.image} alt={product.name} loading="lazy" />
        {product.inStock ? (
          <div className="stock-badge in-stock">‚úì –í –Ω–∞–ª–∏—á–∏–∏</div>
        ) : (
          <div className="stock-badge out-of-stock">‚úó –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏</div>
        )}
      </div>

      <div className="product-info">
        <h3 className="product-name">{product.name}</h3>
        <div className="product-meta">
          <span className="product-brand">{product.brand}</span>
          {renderStars(product.rating)}
        </div>

        <div className="product-footer">
          <div className="product-price">
            <span className="price">{formatPrice(product.price)}</span>
          </div>

          <div className="product-actions">
            <button className="action-btn primary">
              üí∞ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å
            </button>
            <button className="action-btn secondary">
              ‚ûï –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
            </button>
          </div>
        </div>

        {product.feedbacks > 0 && (
          <div className="product-feedbacks">
            üí¨ {product.feedbacks} –æ—Ç–∑—ã–≤–æ–≤
          </div>
        )}
      </div>
    </div>
  );
};
