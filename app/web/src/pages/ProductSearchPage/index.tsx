import React, { useState, useEffect } from 'react';
import { useWildberriesSearch } from '@/hooks/useWildberriesSearch';
import { ProductCard } from '@/components/ProductCard';
import { ProgressBar } from '@/components/ProgressBar';

const ProductSearchPage: React.FC = () => {
  const {
    products,
    suggestions,
    isSearching,
    progress,
    error,
    query,
    searchProducts,
    fetchSuggestions,
    clearSearch,
    retrySearch,
    loadMoreProducts,
    hasMoreProducts,
    isLoading,
  } = useWildberriesSearch();

  const [searchInput, setSearchInput] = useState('');
  const [showSuggestions, setShowSuggestions] = useState(false);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –ø—Ä–∏ –≤–≤–æ–¥–µ —Ç–µ–∫—Å—Ç–∞
  useEffect(() => {
    const debounceTimer = setTimeout(() => {
      if (searchInput.trim() && searchInput.length >= 2) {
        fetchSuggestions(searchInput.trim());
        setShowSuggestions(true);
      } else {
        setShowSuggestions(false);
      }
    }, 300); // –ó–∞–¥–µ—Ä–∂–∫–∞ 300–º—Å –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤

    return () => clearTimeout(debounceTimer);
  }, [searchInput, fetchSuggestions]);

  const handleSearch = (e: React.FormEvent) => {
    e.preventDefault();
    if (searchInput.trim()) {
      searchProducts(searchInput.trim());
      setShowSuggestions(false);
    }
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setSearchInput(e.target.value);
  };

  const handleSuggestionClick = (suggestion: string) => {
    setSearchInput(suggestion);
    searchProducts(suggestion);
    setShowSuggestions(false);
  };

  if (error) {
    return (
      <main className="min-h-screen bg-gradient-to-br from-red-50 to-red-100 p-4">
        <div className="max-w-4xl mx-auto">
          <div className="bg-white rounded-lg shadow-lg p-8 text-center">
            <div className="text-6xl mb-4">‚ùå</div>
            <h2 className="text-2xl font-bold text-gray-800 mb-4">–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞</h2>
            <p className="text-gray-600 mb-6">{error}</p>
            <button
              className="bg-red-500 hover:bg-red-600 text-white font-semibold py-3 px-6 rounded-lg transition-colors duration-200"
              onClick={retrySearch}
            >
              üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </button>
          </div>
        </div>
      </main>
    );
  }

  return (
    <main className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
      <div className="max-w-7xl mx-auto p-4">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold text-gray-800 mb-4">üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤</h1>
          <p className="text-lg text-gray-600">
            –ù–∞–π–¥–∏—Ç–µ —Ç–æ–≤–∞—Ä—ã –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-4 gap-8">
          {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –ø–æ–∏—Å–∫ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
          <div className="lg:col-span-1">
            {/* –ü–æ–∏—Å–∫ */}
            <div className="bg-white rounded-lg shadow-lg p-6 mb-6">
              <h2 className="text-xl font-semibold text-gray-800 mb-4">–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ç–æ–≤–∞—Ä–∞</h2>

              <form onSubmit={handleSearch} className="space-y-4">
                <div className="relative">
                  <input
                    type="text"
                    value={searchInput}
                    onChange={handleInputChange}
                    onFocus={() => setShowSuggestions(true)}
                    onBlur={() => setTimeout(() => setShowSuggestions(false), 200)}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞..."
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all duration-200"
                    disabled={isSearching}
                  />

                  <button
                    type="submit"
                    className="absolute right-2 top-2 bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-md transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed"
                    disabled={isSearching || !searchInput.trim()}
                  >
                    {isSearching ? '‚è≥' : 'üîç'}
                  </button>
                </div>

                {/* –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ–∏—Å–∫–∞ */}
                {showSuggestions && suggestions.length > 0 && (
                  <div className="absolute z-10 w-full bg-white border border-gray-200 rounded-lg shadow-lg mt-1 max-h-60 overflow-y-auto">
                    {suggestions.slice(0, 8).map((suggestion: string, index: number) => (
                      <div
                        key={index}
                        className="px-4 py-3 hover:bg-gray-50 cursor-pointer border-b border-gray-100 last:border-b-0 transition-colors duration-150"
                        onClick={() => handleSuggestionClick(suggestion)}
                      >
                        <div className="flex items-center">
                          <span className="text-blue-500 mr-2">üí°</span>
                          <span className="text-gray-700">{suggestion}</span>
                        </div>
                      </div>
                    ))}
                  </div>
                )}
              </form>

              {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–∏—Å–∫–∞ */}
              {isSearching && (
                <div className="mt-4">
                  <ProgressBar
                    current={progress.current}
                    total={progress.total}
                    message="–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ Wildberries..."
                  />
                </div>
              )}
            </div>

            {/* –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
            <div className="bg-white rounded-lg shadow-lg p-6">
              <h2 className="text-xl font-semibold text-gray-800 mb-4">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</h2>
              <div className="space-y-3">
                {[
                  { icon: 'üëï', name: '–û–¥–µ–∂–¥–∞', color: 'bg-pink-100 text-pink-800' },
                  { icon: 'üëü', name: '–û–±—É–≤—å', color: 'bg-green-100 text-green-800' },
                  { icon: 'üì±', name: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', color: 'bg-purple-100 text-purple-800' },
                  { icon: 'üè†', name: '–î–æ–º –∏ —Å–∞–¥', color: 'bg-yellow-100 text-yellow-800' },
                ].map((category, index) => (
                  <div
                    key={index}
                    className={`${category.color} p-3 rounded-lg cursor-pointer hover:opacity-80 transition-opacity duration-200`}
                  >
                    <div className="flex items-center">
                      <span className="text-2xl mr-3">{category.icon}</span>
                      <span className="font-medium">{category.name}</span>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ */}
          <div className="lg:col-span-3">
            {!isSearching && query && (
              <div className="bg-white rounded-lg shadow-lg p-6">
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
                <div className="flex justify-between items-center mb-6">
                  <div>
                    <h3 className="text-2xl font-bold text-gray-800">
                      –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {products.length}
                    </h3>
                    <p className="text-gray-600 mt-1">–ü–æ –∑–∞–ø—Ä–æ—Å—É "{query}"</p>
                  </div>
                  {products.length > 0 && (
                    <button
                      className="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg transition-colors duration-200"
                      onClick={clearSearch}
                    >
                      üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å
                    </button>
                  )}
                </div>

                {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ */}
                {products.length > 0 ? (
                  <>
                    <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6 mb-8">
                      {products.map((product: any) => (
                        <div key={product.id} className="transform hover:scale-105 transition-transform duration-200">
                          <ProductCard product={product} />
                        </div>
                      ))}
                    </div>

                    {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
                    {hasMoreProducts && (
                      <div className="text-center">
                        <button
                          className="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-3 px-8 rounded-lg transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed"
                          onClick={loadMoreProducts}
                          disabled={isLoading}
                        >
                          {isLoading ? '‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...' : 'üì¶ –ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ —Ç–æ–≤–∞—Ä—ã'}
                        </button>
                      </div>
                    )}
                  </>
                ) : (
                  <div className="text-center py-12">
                    <div className="text-6xl mb-4">üîç</div>
                    <p className="text-xl text-gray-600">–ü–æ –∑–∞–ø—Ä–æ—Å—É "{query}" –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>
                    <p className="text-gray-500 mt-2">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å</p>
                  </div>
                )}
              </div>
            )}

            {/* –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ - –∫–æ–≥–¥–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ */}
            {!query && !isSearching && (
              <div className="bg-white rounded-lg shadow-lg p-12 text-center">
                <div className="text-6xl mb-6">üõçÔ∏è</div>
                <h3 className="text-2xl font-semibold text-gray-800 mb-4">
                  –ù–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤
                </h3>
                <p className="text-gray-600 mb-6">
                  –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞ –≤—ã—à–µ, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–∞—Å –ø—Ä–æ–¥—É–∫—Ç—ã
                </p>
                <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mt-8">
                  {[
                    '—Å–º–∞—Ä—Ç—Ñ–æ–Ω Samsung',
                    '–Ω–∞—É—à–Ω–∏–∫–∏ –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ',
                    '—á–∞—Å—ã —É–º–Ω—ã–µ',
                    '–ø–ª–∞–Ω—à–µ—Ç Samsung',
                  ].map((example, index) => (
                    <button
                      key={index}
                      className="bg-blue-50 hover:bg-blue-100 text-blue-700 px-4 py-3 rounded-lg transition-colors duration-200 border border-blue-200"
                      onClick={() => {
                        setSearchInput(example);
                        searchProducts(example);
                      }}
                    >
                      {example}
                    </button>
                  ))}
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </main>
  );
};

export default ProductSearchPage;
