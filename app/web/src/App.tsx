import React, { useState } from 'react';
import { DebugProvider } from './lib/debug/DebugContext';
import { NotificationProvider } from './lib/notifications/NotificationSystem';
import { useNotificationActions } from './lib/notifications/useNotificationActions';
import { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';
import ComponentsPage from './components/ComponentsPage';
import ProductNameSearch from './components/ProductNameSearch';
import DebugPanel from './components/DebugPanel';
import './styles.css';

// Material-UI —Å—Ç–∏–ª—å —à–∞–ø–∫–∏ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
const Header: React.FC = () => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [searchQuery, setSearchQuery] = useState('');

  const handleSearch = (e: React.FormEvent) => {
    e.preventDefault();
    if (searchQuery.trim()) {
      console.log('–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤:', searchQuery);
    }
  };

  return (
    <>
      <header className="app-header">
        <div className="header-content">
          <div className="header-brand">
            <h1 className="header-title">
              üßÆ WB Calculator
            </h1>
            <p className="header-subtitle">–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤</p>
          </div>

          <nav className="header-nav">
            <Link to="/" className="nav-link">
              üè† –ì–ª–∞–≤–Ω–∞—è
            </Link>
            <Link to="/search" className="nav-link">
              üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤
            </Link>
            <Link to="/components" className="nav-link">
              üß© –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
            </Link>
          </nav>

          <form className="search-form" onSubmit={handleSearch}>
            <div className="search-container">
              <input
                type="text"
                className="search-input"
                placeholder="–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
              />
              <button type="submit" className="search-button">
                üîç
              </button>
            </div>
          </form>

          <button
            className={`menu-toggle ${isMenuOpen ? 'active' : ''}`}
            onClick={() => setIsMenuOpen(true)}
            aria-label="–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é"
          >
            <div className="hamburger">
              <span className="line"></span>
              <span className="line"></span>
              <span className="line"></span>
            </div>
          </button>
        </div>
      </header>

      <OverlayMenu isOpen={isMenuOpen} onClose={() => setIsMenuOpen(false)} />
    </>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç responsive overlay –º–µ–Ω—é
const OverlayMenu: React.FC<{ isOpen: boolean; onClose: () => void }> = ({ isOpen, onClose }) => {
  const { showSuccess, showError, showWarning, showInfo } = useNotificationActions();
  const [searchQuery, setSearchQuery] = useState('');

  const handleSearch = (e: React.FormEvent) => {
    e.preventDefault();
    if (searchQuery.trim()) {
      console.log('–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –º–µ–Ω—é:', searchQuery);
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ–∏—Å–∫–∞ –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫
    }
  };

  const handleNotificationClick = (type: 'success' | 'error' | 'warning' | 'info') => {
    switch (type) {
      case 'success':
        showSuccess('–¢–µ—Å—Ç —É—Å–ø–µ—Ö–∞!', '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—Ö–∞');
        break;
      case 'error':
        showError('–¢–µ—Å—Ç –æ—à–∏–±–∫–∏!', '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—à–∏–±–∫–∏');
        break;
      case 'warning':
        showWarning('–¢–µ—Å—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è!', '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è');
        break;
      case 'info':
        showInfo('–¢–µ—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏!', '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏');
        break;
    }
    onClose();
  };

  return (
    <>
      {/* –û–≤–µ—Ä–ª–µ–π –º–µ–Ω—é */}
      <div className={`overlay ${isOpen ? 'active' : ''}`}>
        <div className="wrap">
          {/* –§–æ—Ä–º–∞ –ø–æ–∏—Å–∫–∞ –≤ –º–µ–Ω—é */}
          <div className="menu-search">
            <form className="search-form" onSubmit={handleSearch}>
              <div className="search-container">
                <input
                  type="text"
                  className="search-input"
                  placeholder="–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é..."
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                />
                <button type="submit" className="search-button">
                  üîç
                </button>
              </div>
            </form>
          </div>

          <ul className="wrap-nav">
            <li>
              <a href="#" onClick={(e) => { e.preventDefault(); handleNotificationClick('success'); }}>
                –ì–ª–∞–≤–Ω–∞—è
              </a>
              <ul>
                <li><a href="#" onClick={(e) => { e.preventDefault(); handleNotificationClick('success'); }}>–û –ø—Ä–æ–µ–∫—Ç–µ</a></li>
                <li><a href="#" onClick={(e) => { e.preventDefault(); handleNotificationClick('info'); }}>–ö–æ–º–∞–Ω–¥–∞</a></li>
                <li><a href="#" onClick={(e) => { e.preventDefault(); handleNotificationClick('info'); }}>–ö–æ–Ω—Ç–∞–∫—Ç—ã</a></li>
                <li><a href="#" onClick={(e) => { e.preventDefault(); handleNotificationClick('info'); }}>–ü–æ–º–æ—â—å</a></li>
              </ul>
            </li>
            <li>
              <a href="#" onClick={(e) => { e.preventDefault(); handleNotificationClick('warning'); }}>
                –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
              </a>
              <ul>
                <li><a href="#" onClick={(e) => { e.preventDefault(); handleNotificationClick('info'); }}>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä WB</a></li>
                <li><a href="#" onClick={(e) => { e.preventDefault(); handleNotificationClick('info'); }}>–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤</a></li>
                <li><a href="#" onClick={(e) => { e.preventDefault(); handleNotificationClick('info'); }}>–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ</a></li>
                <li><a href="#" onClick={(e) => { e.preventDefault(); handleNotificationClick('info'); }}>–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ü–µ–Ω</a></li>
                <li><a href="#" onClick={(e) => { e.preventDefault(); handleNotificationClick('info'); }}>–û—Ç—á–µ—Ç—ã</a></li>
              </ul>
            </li>
            <li>
              <a href="#" onClick={(e) => { e.preventDefault(); handleNotificationClick('error'); }}>
                –ù–∞—Å—Ç—Ä–æ–π–∫–∏
              </a>
              <ul>
                <li><a href="#" onClick={(e) => { e.preventDefault(); handleNotificationClick('info'); }}>–ü—Ä–æ—Ñ–∏–ª—å</a></li>
                <li><a href="#" onClick={(e) => { e.preventDefault(); handleNotificationClick('info'); }}>API –∫–ª—é—á–∏</a></li>
                <li><a href="#" onClick={(e) => { e.preventDefault(); handleNotificationClick('info'); }}>–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</a></li>
              </ul>
            </li>
          </ul>

          <div className="social">
            <a href="https://github.com/MitrofanKaufman/wb-calc" target="_blank" rel="noopener noreferrer">
              <div className="social-icon">
                <i>üìä</i>
              </div>
            </a>
            <a href="#" onClick={(e) => { e.preventDefault(); handleNotificationClick('info'); }}>
              <div className="social-icon">
                <i>üìã</i>
              </div>
            </a>
            <a href="#" onClick={(e) => { e.preventDefault(); handleNotificationClick('info'); }}>
              <div className="social-icon">
                <i>‚öôÔ∏è</i>
              </div>
            </a>
            <p>
              WB Calculator v1.0<br />
              –°–æ–∑–¥–∞–Ω–æ —Å ‚ù§Ô∏è –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤
            </p>
          </div>

          <button
            onClick={onClose}
            style={{
              position: 'absolute',
              top: '1rem',
              right: '1rem',
              background: '#f44336',
              color: 'white',
              border: 'none',
              borderRadius: '50%',
              width: '40px',
              height: '40px',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              fontSize: '1.2rem',
              cursor: 'pointer',
              zIndex: 10
            }}
          >
            √ó
          </button>
        </div>
      </div>

      {/* –û–≤–µ—Ä–ª–µ–π –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é –∫–ª–∏–∫–æ–º –≤–Ω–µ –æ–±–ª–∞—Å—Ç–∏ */}
      {isOpen && (
        <div
          onClick={onClose}
          style={{
            position: 'fixed',
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            zIndex: 999
          }}
        />
      )}
    </>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–¥–≤–∞–ª–∞
const Footer: React.FC = () => {
  return (
    <footer className="app-footer">
      <div className="footer-content">
        <div className="footer-grid">
          <div>
            <h3>üßÆ WB Calculator</h3>
            <p>
              –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ Wildberries –∏ –¥—Ä—É–≥–∏—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤.
            </p>
          </div>
          <div>
            <h3>üìä –§—É–Ω–∫—Ü–∏–∏</h3>
            <ul>
              <li>‚Ä¢ –†–∞—Å—á–µ—Ç –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–æ–≤</li>
              <li>‚Ä¢ –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤</li>
              <li>‚Ä¢ –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–±—ã–ª–∏</li>
              <li>‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ü–µ–Ω</li>
            </ul>
          </div>
          <div>
            <h3>üîó –°—Å—ã–ª–∫–∏</h3>
            <div>
              <a href="#">–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</a>
              <a href="#">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</a>
              <a href="#">–û –ø—Ä–æ–µ–∫—Ç–µ</a>
            </div>
          </div>
        </div>
        <div className="footer-bottom">
          ¬© 2024 WB Calculator. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
        </div>
      </div>
    </footer>
  );
};

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
const HomePage: React.FC = () => {
  return (
    <main className="home-page">
      <div className="home-content">
        <h1 className="home-title">
          üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ WB Calculator
        </h1>
        <p className="home-subtitle">
          –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö
        </p>
        <p className="home-description">
          –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {new Date().toLocaleString('ru-RU')}
        </p>

        <div className="home-buttons">
          <Link
            to="/search"
            className="action-button search"
          >
            üîç –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤
          </Link>

          <button
            className="action-button analytics"
            onClick={() => {
              alert('üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ - —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!');
            }}
          >
            üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
          </button>
        </div>

        <div className="home-features">
          <div className="feature-card">
            <h3>üéØ –¢–æ—á–Ω–æ—Å—Ç—å</h3>
            <p>–ê–ª–≥–æ—Ä–∏—Ç–º—ã —Ä–∞—Å—á–µ—Ç–∞ –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤</p>
          </div>
          <div className="feature-card">
            <h3>‚ö° –°–∫–æ—Ä–æ—Å—Ç—å</h3>
            <p>–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π —Ä–∞—Å—á–µ—Ç –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –¥–ª—è —Ç—ã—Å—è—á —Ç–æ–≤–∞—Ä–æ–≤</p>
          </div>
          <div className="feature-card">
            <h3>üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h3>
            <p>–í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ, –±–µ–∑ –ø–µ—Ä–µ–¥–∞—á–∏ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º</p>
          </div>
        </div>
      </div>
    </main>
  );
};

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
const ProductSearchPage: React.FC = () => {
  return (
    <main className="search-page">
      <div className="search-container">
        <ProductNameSearch />
      </div>
    </main>
  );
};

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function AppContent() {
  return (
    <div className="app-container">
      <Header />

      <Routes>
        <Route path="/" element={<HomePage />} />
        <Route path="/search" element={<ProductSearchPage />} />
        <Route path="/components" element={<ComponentsPage />} />
      </Routes>

      <Footer />
    </div>
  );
}

function App() {
  return (
    <DebugProvider enabled={true}>
      <NotificationProvider>
        <Router>
          <AppContent />
          <DebugPanel position="bottom-right" />
        </Router>
      </NotificationProvider>
    </DebugProvider>
  );
}

export default App;
