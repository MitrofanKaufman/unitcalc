version: '3.8'

services:
  # Серверная часть
  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: wb-calc-server-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=/app/data/units.db
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - CLIENT_URL=${CLIENT_URL:-http://localhost}
    volumes:
      - server_data_prod:/app/data
      - server_logs_prod:/app/logs
    networks:
      - wb-calc-network-prod
    healthcheck:
      test: ["CMD", "node", "-e", "const http=require('http');const req=http.request({hostname:'localhost',port:3001,path:'/health'},res=>{process.exit(res.statusCode===200?0:1)});req.on('error',()=>process.exit(1));req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Веб-приложение
  web:
    build:
      context: .
      dockerfile: Dockerfile.client
    container_name: wb-calc-web-prod
    restart: unless-stopped
    environment:
      - VITE_API_URL=/api
    ports:
      - "80:80"
    networks:
      - wb-calc-network-prod
    depends_on:
      server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Обратный прокси (опционально, можно использовать Nginx напрямую на хосте)
  # nginx:
  #   image: nginx:stable-alpine
  #   container_name: wb-calc-nginx-prod
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - web
  #     - server
  #   networks:
  #     - wb-calc-network-prod

networks:
  wb-calc-network-prod:
    driver: bridge

volumes:
  server_data_prod:
  server_logs_prod:
