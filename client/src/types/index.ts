// –ë–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

export interface BaseEntity {
  id: string;
  createdAt?: string;
  updatedAt?: string;
}

// –¢–∏–ø—ã –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤
export interface Marketplace {
  id: string;
  name: string;
  icon: string;
  color: string;
  commission: {
    base: number;
    categoryMultiplier?: Record<string, number>;
  };
  isActive: boolean;
}

// –¢–∏–ø—ã –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤
export interface Product {
  id: string;
  name: string;
  price: number;
  category: string;
  marketplace: string;
  characteristics?: {
    weight?: number;
    dimensions?: {
      length?: number;
      width?: number;
      height?: number;
    };
    brand?: string;
    rating?: number;
    reviews?: number;
    inStock?: boolean;
  };
  cached?: boolean;
  lastUpdated?: string;
}

// –¢–∏–ø—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤
export interface ProductCategory {
  id: string;
  name: string;
  description?: string;
  parentId?: string;
  isActive: boolean;
}

// –¢–∏–ø—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–æ–≤ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏
export interface ProfitabilityCalculation {
  id: string;
  productId: string;
  purchasePrice: number;
  sellingPrice: number;
  logisticsCost: number;
  otherCosts: number;
  marketplaceId: string;
  categoryId: string;
  result: CalculationResult;
  createdAt: string;
  userId?: string;
}

export interface CalculationResult {
  revenue: number;           // –í—ã—Ä—É—á–∫–∞ = –¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏ - –ö–æ–º–∏—Å—Å–∏—è - –õ–æ–≥–∏—Å—Ç–∏–∫–∞ - –î—Ä—É–≥–∏–µ –∑–∞—Ç—Ä–∞—Ç—ã
  commission: number;        // –ö–æ–º–∏—Å—Å–∏—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞
  logistics: number;         // –°—Ç–æ–∏–º–æ—Å—Ç—å –ª–æ–≥–∏—Å—Ç–∏–∫–∏
  otherCosts: number;        // –î—Ä—É–≥–∏–µ –∑–∞—Ç—Ä–∞—Ç—ã
  profit: number;           // –ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å
  profitability: number;    // –†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
  roi: number;             // ROI (–æ–∫—É–ø–∞–µ–º–æ—Å—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π)
}

// –¢–∏–ø—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export interface User extends BaseEntity {
  email: string;
  name: string;
  role: 'admin' | 'user' | 'manager';
  isActive: boolean;
  lastLoginAt?: string;
}

// –¢–∏–ø—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
export interface AppSettings {
  theme: 'light' | 'dark' | 'system';
  language: 'ru' | 'en';
  currency: 'RUB' | 'USD' | 'EUR';
  notifications: {
    email: boolean;
    push: boolean;
    calculationComplete: boolean;
    newProducts: boolean;
  };
}

// –¢–∏–ø—ã –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
export interface PaginationParams {
  page: number;
  pageSize: number;
  sortBy?: string;
  sortOrder?: 'asc' | 'desc';
}

export interface PaginatedResponse<T> {
  data: T[];
  pagination: {
    page: number;
    pageSize: number;
    total: number;
    totalPages: number;
  };
}

// –¢–∏–ø—ã –¥–ª—è API –æ—Ç–≤–µ—Ç–æ–≤
export interface ApiResponse<T> {
  success: boolean;
  data?: T;
  message?: string;
  errors?: string[];
}

export interface ApiError {
  code: string;
  message: string;
  details?: Record<string, unknown>;
}

// –¢–∏–ø—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–æ–∏—Å–∫–∞
export interface SearchFilters {
  query?: string;
  marketplace?: string[];
  category?: string[];
  priceRange?: {
    min?: number;
    max?: number;
  };
  rating?: number;
  inStock?: boolean;
  dateRange?: {
    start?: string;
    end?: string;
  };
}

// –¢–∏–ø—ã –¥–ª—è —Ñ–æ—Ä–º
export interface FormField {
  name: string;
  label: string;
  type: 'text' | 'number' | 'email' | 'password' | 'select' | 'multiselect' | 'date' | 'boolean';
  required?: boolean;
  placeholder?: string;
  options?: Array<{ value: string; label: string }>;
  validation?: {
    min?: number;
    max?: number;
    pattern?: string;
    custom?: (value: unknown) => string | null;
  };
}

export interface FormConfig {
  fields: FormField[];
  submitLabel?: string;
  cancelLabel?: string;
  layout?: 'horizontal' | 'vertical' | 'inline';
}

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
export const MARKETPLACES: Marketplace[] = [
  {
    id: 'wb',
    name: 'Wildberries',
    icon: 'üõçÔ∏è',
    color: '#7B68EE',
    commission: {
      base: 15,
      categoryMultiplier: {
        'electronics': 0.05,
        'clothing': 0.15,
        'home': 0.10,
      }
    },
    isActive: true
  },
  {
    id: 'ozon',
    name: 'Ozon',
    icon: 'üì¶',
    color: '#0058FF',
    commission: {
      base: 12,
      categoryMultiplier: {
        'electronics': 0.08,
        'books': 0.12,
        'toys': 0.15,
      }
    },
    isActive: true
  },
  {
    id: 'yandex',
    name: 'Yandex Market',
    icon: 'üõí',
    color: '#FF3333',
    commission: {
      base: 8,
      categoryMultiplier: {
        'electronics': 0.05,
        'fashion': 0.12,
        'food': 0.08,
      }
    },
    isActive: true
  }
];

export const PRODUCT_CATEGORIES: ProductCategory[] = [
  { id: 'electronics', name: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', isActive: true },
  { id: 'clothing', name: '–û–¥–µ–∂–¥–∞', isActive: true },
  { id: 'home', name: '–¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞', isActive: true },
  { id: 'books', name: '–ö–Ω–∏–≥–∏', isActive: true },
  { id: 'toys', name: '–ò–≥—Ä—É—à–∫–∏', isActive: true },
  { id: 'fashion', name: '–ú–æ–¥–∞', isActive: true },
  { id: 'food', name: '–ï–¥–∞', isActive: true },
];

// –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ —Ç–∏–ø—ã
export type LoadingState = 'idle' | 'loading' | 'success' | 'error';

export interface AsyncState<T> {
  data: T | null;
  loading: boolean;
  error: string | null;
}

// –°—Ç–∞—Ç—É—Å—ã –æ–ø–µ—Ä–∞—Ü–∏–π
export type OperationStatus = 'pending' | 'in_progress' | 'completed' | 'failed';

export interface OperationResult {
  success: boolean;
  message?: string;
  data?: unknown;
}
